#Q1.a
curl https://www.staff.hs-mittweida.de/~wuenschi/data/media/compbiolbook/chapter-10-shell-programming--triplet-stop.sh > triplet-stop.sh
#use curl to read the content of triplet-stop.sh from website and then save as document triplet-stop.sh. use command “ls” and find the document in ubuntu.
#Q1.b
#to copy the content of triplet-stop.sh
cat triplet-stop.sh
#then select all lines and copy. make the highlighted change below and save as triplet-stop.sh
cat > triplet-stop.sh
#!/bin/bash
# save as triplet-stop.sh
# splits a sequence into triplets
y=0
while [ -n "${1:$y:3}" ]; do
seq=$seq${1:$y:3}" "
y=$(expr $y + 3)
if [ $y == 9 ]; then
break
fi
done
x=9
while [ -n "${1:$x:3}" ]; do
seq=$seq${1:$x:3}" "
x=$(expr $x + 3)
if [ ${1:$x:3} == taa ]; then
break
fi
done
echo "$seq"
#press “ctrl” and “d” to exit the editing status
#make the file executable
chmod +x triplet-stop.sh
#to test the code
./triplet-stop.sh abctaadefghijklmnoppptaa
#the result is “abc taa def ghi jkl mno ppp”
#Q2.a
#Open FileZilla -> Site Manager and use the key file to login ubuntu. Use FileZilla to upload the file “tutes.txt”
#Q2.b
uniq -u tutes.txt
#the result will be
#[Tutorial_1|TUE|04:00PM|C06]
#[Tutorial_1|WED|10:00AM|C10]
#[Tutorial_1|WED|05:00PM|C15]
#[Tutorial_1|WED|04:00PM|C14]
#[Tutorial_1|WED|10:00AM|C09]
#[Tutorial_1|WED|04:00PM|C13]
#I searched “unique” in textbook but only found “sort” command, which will delete the duplicates. However, it’s not what is required here. I searched in stackoverflow forum and found the command “uniq”. Among all types of “uniq” command, “uniq -u” will output all lines that appear exactly once, and it will print them once.
#Q3
#11.2 Find a regular expression that matches a line with exactly three space-separated fields (words).
#egrep '^[^ ]+ [^ ]+ [^ ]+ [^ ]+$' file.txt
#to test the code
cat > test112.txt
a b c d efg
ab cd ef ghi
abc def ghi kljkl
a b c d efghijklm
abcdefghijklmn
#press “ctrl” and “d” to exit the editing status
egrep '^[^ ]+ [^ ]+ [^ ]+ [^ ]+$' test112.txt
#it will display line 2 and 3, as line 1 has 4 spaces, line 4 has 2 consecutive spaces between letters, line 5 has no space.
#11.3 Find a search pattern that matches a negative integer.
#egrep -e '-[0-9]+[^.]+|-[0-9]+$' file.txt
#to test the code
cat > test113.txt
0 -1 20 -34
100 50
-6
-78
1.2
-900
#press “ctrl” and “d” to exit the editing status
egrep -e '-[0-9]+[^.]|-[0-9]+$' test113.txt
#it will display line 1, 3, 4 and 6, as line 2 doesn’t have negative integer, and line 5 has decimal, not integer. In line 1, only “-1” and “-34” are highlighted as “0” and “20” are not negative.
#11.4 Design a search pattern that matches any decimal number (positive or negative) surrounded by spaces.
#egrep '[ ]+[0-9]+[.]+[0-9]+[ ]|[ ]+-[0-9]+[.]+[0-9]+[ ]' file.txt
#to test the code
cat > test114.txt
0.1 345 678
0.2 456 789
0.34 567 890
-0.456 789 123
-0.5678 12 345
123 456
789 1234
123 0.456 789
123 -0.456 789
123 456.789 123
123 -456.789 123
123.456 789
-123.456 789
12 345.678 90
123.456 789
#press “ctrl” and “d” to exit the editing status
egrep '[ ]+[0-9]+[.]+[0-9]+[ ]|[ ]+-[0-9]+[.]+[0-9]+[ ]' test114.txt
#it will display line 2 to 4, 8 to 15, as line 1 and 5 don’t have space before 0.1 or -0.5678, line 6 and 7 don’t have decimal, only integer. The decimal numbers in line 2 to 4, 8 to 15 are highlighted.
#11.6 Match all lines that contain the word “hydrogenase” but omit all lines which contain the word “dehydrogenase”.
#egrep ' hydrogenase |^hydrogenase | hydrogenase+$|^hydrogenase+$' file.txt
#to test the code
cat > test116.txt
hydrogenase aaaaa
hydrogenase
aaaaa hydrogenase bbbbb
aaaaa hydrogenasebbbbb ccccc
aaaaa hydrogenase
dehydrogenase aaaaa
aaaaa dehydrogenase bbbbb
aaaaa dehydrogenasebbbbb ccccc
#press “ctrl” and “d” to exit the editing status
egrep ' hydrogenase |^hydrogenase | hydrogenase+$|^hydrogenase+$' test116.txt
#it will display line 1 to 3 and 5, as line has “hydrogenasebbbbb” as a word, not “hydrogenase” as a word, line 6 to 8 have “dehydrogenase”.
